<Token: PROGRAM, Lexeme: program, Line: 1>
<Token: OPENCURLYPAR, Lexeme: {, Line: 1>
<Token: INT, Lexeme: int, Line: 2>
<Token: IDENTIFIER, Lexeme: x, Line: 2>
<Token: SEMICOLON, Lexeme: ;, Line: 2>
<Token: INT, Lexeme: int, Line: 3>
<Token: IDENTIFIER, Lexeme: a, Line: 3>
<Token: SEMICOLON, Lexeme: ;, Line: 3>
<Token: IDENTIFIER, Lexeme: x, Line: 5>
<Token: ASSIGNMENT, Lexeme: =, Line: 5>
<Token: IDENTIFIER, Lexeme: summation, Line: 5>
<Token: OPENPAR, Lexeme: (, Line: 5>
<Token: NUMINT, Lexeme: 4, Line: 5>
<Token: ADD, Lexeme: +, Line: 5>
<Token: NUMINT, Lexeme: 1, Line: 5>
<Token: COMMA, Lexeme: ,, Line: 5>
<Token: IDENTIFIER, Lexeme: a, Line: 5>
<Token: COMMA, Lexeme: ,, Line: 5>
<Token: NUMINT, Lexeme: 2, Line: 5>
<Token: CLOSEPAR, Lexeme: ), Line: 5>
<Token: SEMICOLON, Lexeme: ;, Line: 5>
<Token: CLOSECURLYPAR, Lexeme: }, Line: 7>
<Token: SEMICOLON, Lexeme: ;, Line: 7>
<Token: INT, Lexeme: int, Line: 9>
<Token: IDENTIFIER, Lexeme: summation, Line: 9>
<Token: OPENPAR, Lexeme: (, Line: 9>
<Token: INT, Lexeme: int, Line: 9>
<Token: IDENTIFIER, Lexeme: par1, Line: 9>
<Token: COMMA, Lexeme: ,, Line: 9>
<Token: INT, Lexeme: int, Line: 9>
<Token: IDENTIFIER, Lexeme: par2, Line: 9>
<Token: COMMA, Lexeme: ,, Line: 9>
<Token: INT, Lexeme: int, Line: 9>
<Token: IDENTIFIER, Lexeme: par3, Line: 9>
<Token: CLOSEPAR, Lexeme: ), Line: 9>
<Token: OPENCURLYPAR, Lexeme: {, Line: 9>
<Token: RETURN, Lexeme: return, Line: 10>
<Token: OPENPAR, Lexeme: (, Line: 10>
<Token: IDENTIFIER, Lexeme: par1, Line: 10>
<Token: ADD, Lexeme: +, Line: 10>
<Token: IDENTIFIER, Lexeme: par2, Line: 10>
<Token: ADD, Lexeme: +, Line: 10>
<Token: IDENTIFIER, Lexeme: par3, Line: 10>
<Token: CLOSEPAR, Lexeme: ), Line: 10>
<Token: SEMICOLON, Lexeme: ;, Line: 10>
<Token: CLOSECURLYPAR, Lexeme: }, Line: 11>
<Token: SEMICOLON, Lexeme: ;, Line: 11>
<Token: ENDOFFILE, Lexeme: null, Line: 13>
<Token: ENDOFFILE, Lexeme: null, Line: 13>
